/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.1 at Fri May 13 11:50:43 2022. */

#ifndef PB_ANY_PB_H_INCLUDED
#define PB_ANY_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(2048) Any_value_t;
typedef struct _Any {
    char type_url[64];
    Any_value_t value;
/* @@protoc_insertion_point(struct:Any) */
} Any;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Any_init_default                         {"", {0, {0}}}
#define Any_init_zero                            {"", {0, {0}}}

/* Field tags (for use in manual encoding/decoding) */
#define Any_type_url_tag                         1
#define Any_value_tag                            2

/* Struct field encoding specification for nanopb */
extern const pb_field_t Any_fields[3];

/* Maximum encoded size of messages (where known) */
#define Any_size                                 2117

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define ANY_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
