/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.1 at Wed May 11 19:10:06 2022. */

#ifndef PB_LIBSAFETRACKERMESSAGE_PB_H_INCLUDED
#define PB_LIBSAFETRACKERMESSAGE_PB_H_INCLUDED
#include <pb.h>

#include "any.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _BatInfo {
    pb_size_t cellVol_count;
    int32_t cellVol[24];
    pb_size_t batteryTemp_count;
    int32_t batteryTemp[24];
/* @@protoc_insertion_point(struct:BatInfo) */
} BatInfo;

typedef struct _BatteryFaultEvent {
    int32_t batteryErrorCode;
/* @@protoc_insertion_point(struct:BatteryFaultEvent) */
} BatteryFaultEvent;

typedef struct _BatteryInfo {
    int32_t batteryVoltage;
    int32_t batteryCurrent;
    int32_t batterySoc;
    char batteryHardVersion[64];
    char batterySoftVersion[64];
    int32_t batteryWorkMode;
    int32_t batteryProtectCode;
    int32_t batteryErrorCode;
    int32_t batteryTemperatureMax;
    int32_t batteryVoltageMax;
    int32_t batteryVoltageMin;
    int32_t mosStatus;
    int32_t chargeCycleTime;
/* @@protoc_insertion_point(struct:BatteryInfo) */
} BatteryInfo;

typedef struct _BatteryProtectEvent {
    int32_t batteryProtectCode;
/* @@protoc_insertion_point(struct:BatteryProtectEvent) */
} BatteryProtectEvent;

typedef struct _BatterySafeEvent {
    int32_t batteryVoltage;
    int32_t batteryCurrent;
    int32_t batterySoc;
    int32_t batteryAh;
    pb_size_t cellV_count;
    int32_t cellV[24];
    int32_t chargeState;
    int32_t faultState3;
    int32_t faultCellNumber3;
    pb_size_t faultCellID3_count;
    int32_t faultCellID3[24];
    int32_t meanOCV;
    int32_t oCVIntervalCNT;
    int32_t faultState2;
    int32_t faultCellNumber2;
    pb_size_t faultCellID2_count;
    int32_t faultCellID2[24];
    int32_t faultState1;
    int32_t faultCellNumber1;
    pb_size_t faultCellID1_count;
    int32_t faultCellID1[24];
/* @@protoc_insertion_point(struct:BatterySafeEvent) */
} BatterySafeEvent;

typedef struct _BmsOTA {
    char model[64];
    char manufacture[64];
    char hardwareVersion[64];
    char softwareVersion[64];
    char url[64];
    char md5[64];
    int32_t size;
/* @@protoc_insertion_point(struct:BmsOTA) */
} BmsOTA;

typedef struct _BmsOperation {
    int32_t action;
    int32_t value;
/* @@protoc_insertion_point(struct:BmsOperation) */
} BmsOperation;

typedef struct _FirmwareInfo {
    char model[64];
    char manufacture[64];
    char hardwareVersion[64];
    char softwareVersion[64];
    char url[64];
    char md5[64];
    int32_t size;
/* @@protoc_insertion_point(struct:FirmwareInfo) */
} FirmwareInfo;

typedef struct _GpsLocationInfo {
    int32_t reportReason;
    int32_t detStatus;
    int32_t csq;
    int32_t networkType;
    int32_t locationMode;
    double longitude;
    int32_t longitudeDirection;
    double latitude;
    int32_t latitudeDirection;
    int32_t gpsSpeed;
    int32_t gpsSignal;
    int32_t satelliteNum;
    int32_t accuracy;
/* @@protoc_insertion_point(struct:GpsLocationInfo) */
} GpsLocationInfo;

typedef struct _Header {
    char thingId[64];
    int64_t timestamp;
/* @@protoc_insertion_point(struct:Header) */
} Header;

typedef struct _LibsafeOTA {
    char model[64];
    char manufacture[64];
    char hardwareVersion[64];
    char softwareVersion[64];
    char url[64];
    char md5[64];
    int32_t size;
/* @@protoc_insertion_point(struct:LibsafeOTA) */
} LibsafeOTA;

typedef struct _OtaResponseData {
    bool result;
    int32_t reason;
    char slaveThingIds[64];
/* @@protoc_insertion_point(struct:OtaResponseData) */
} OtaResponseData;

typedef struct _TrackerBaseInfo {
    char model[64];
    char manufacture[64];
    char imei[64];
    char imsi[64];
    char mobile[64];
    char trackerHardwareVersion[64];
    char trackerSoftwareVersion[64];
/* @@protoc_insertion_point(struct:TrackerBaseInfo) */
} TrackerBaseInfo;

typedef struct _TrackerFaultEvent {
    char logDetail[64];
/* @@protoc_insertion_point(struct:TrackerFaultEvent) */
} TrackerFaultEvent;

typedef struct _TrackerOperation {
    bool turnOffBms;
    bool turnOffTracker;
/* @@protoc_insertion_point(struct:TrackerOperation) */
} TrackerOperation;

typedef struct _TrackerQuery {
    bool base;
    bool realtime;
    bool log;
    bool config;
    bool bat;
/* @@protoc_insertion_point(struct:TrackerQuery) */
} TrackerQuery;

typedef struct _TrackerResetEvent {
    int32_t serviceId;
/* @@protoc_insertion_point(struct:TrackerResetEvent) */
} TrackerResetEvent;

typedef struct _BatteryLowPowerEvent {
    int32_t batterySoc;
    GpsLocationInfo gpsLocationInfo;
/* @@protoc_insertion_point(struct:BatteryLowPowerEvent) */
} BatteryLowPowerEvent;

typedef struct _MeassageData {
    Header header;
    Any data;
    int32_t code;
/* @@protoc_insertion_point(struct:MeassageData) */
} MeassageData;

typedef struct _OtaAction {
    FirmwareInfo trackerOTA;
    BmsOTA bmsOTA;
    LibsafeOTA libsafeOTA;
/* @@protoc_insertion_point(struct:OtaAction) */
} OtaAction;

typedef struct _TrackerRealTimeInfo {
    BatteryInfo batteryInfo;
    GpsLocationInfo gpsLocationInfo;
/* @@protoc_insertion_point(struct:TrackerRealTimeInfo) */
} TrackerRealTimeInfo;

typedef struct _EventRequestData {
    BatteryLowPowerEvent batteryLowPowerEvent;
    BatteryFaultEvent batteryFaultEvent;
    BatteryProtectEvent batteryProtectEvent;
    TrackerFaultEvent trackerFaultEvent;
    TrackerResetEvent trackerResetEvent;
    BatterySafeEvent batterySafeEvent;
    int64_t eventTime;
/* @@protoc_insertion_point(struct:EventRequestData) */
} EventRequestData;

/* Default values for struct fields */

/* Initializer values for message structs */
#define MeassageData_init_default                {Header_init_default, Any_init_default, 0}
#define Header_init_default                      {"", 0}
#define TrackerBaseInfo_init_default             {"", "", "", "", "", "", ""}
#define TrackerRealTimeInfo_init_default         {BatteryInfo_init_default, GpsLocationInfo_init_default}
#define BatteryInfo_init_default                 {0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0}
#define GpsLocationInfo_init_default             {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define EventRequestData_init_default            {BatteryLowPowerEvent_init_default, BatteryFaultEvent_init_default, BatteryProtectEvent_init_default, TrackerFaultEvent_init_default, TrackerResetEvent_init_default, BatterySafeEvent_init_default, 0}
#define BatteryLowPowerEvent_init_default        {0, GpsLocationInfo_init_default}
#define BatteryFaultEvent_init_default           {0}
#define BatteryProtectEvent_init_default         {0}
#define TrackerFaultEvent_init_default           {""}
#define TrackerResetEvent_init_default           {0}
#define BatterySafeEvent_init_default            {0, 0, 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0, 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define OtaResponseData_init_default             {0, 0, ""}
#define TrackerQuery_init_default                {0, 0, 0, 0, 0}
#define OtaAction_init_default                   {FirmwareInfo_init_default, BmsOTA_init_default, LibsafeOTA_init_default}
#define FirmwareInfo_init_default                {"", "", "", "", "", "", 0}
#define BmsOTA_init_default                      {"", "", "", "", "", "", 0}
#define LibsafeOTA_init_default                  {"", "", "", "", "", "", 0}
#define TrackerOperation_init_default            {0, 0}
#define BmsOperation_init_default                {0, 0}
#define BatInfo_init_default                     {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define MeassageData_init_zero                   {Header_init_zero, Any_init_zero, 0}
#define Header_init_zero                         {"", 0}
#define TrackerBaseInfo_init_zero                {"", "", "", "", "", "", ""}
#define TrackerRealTimeInfo_init_zero            {BatteryInfo_init_zero, GpsLocationInfo_init_zero}
#define BatteryInfo_init_zero                    {0, 0, 0, "", "", 0, 0, 0, 0, 0, 0, 0, 0}
#define GpsLocationInfo_init_zero                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define EventRequestData_init_zero               {BatteryLowPowerEvent_init_zero, BatteryFaultEvent_init_zero, BatteryProtectEvent_init_zero, TrackerFaultEvent_init_zero, TrackerResetEvent_init_zero, BatterySafeEvent_init_zero, 0}
#define BatteryLowPowerEvent_init_zero           {0, GpsLocationInfo_init_zero}
#define BatteryFaultEvent_init_zero              {0}
#define BatteryProtectEvent_init_zero            {0}
#define TrackerFaultEvent_init_zero              {""}
#define TrackerResetEvent_init_zero              {0}
#define BatterySafeEvent_init_zero               {0, 0, 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0, 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define OtaResponseData_init_zero                {0, 0, ""}
#define TrackerQuery_init_zero                   {0, 0, 0, 0, 0}
#define OtaAction_init_zero                      {FirmwareInfo_init_zero, BmsOTA_init_zero, LibsafeOTA_init_zero}
#define FirmwareInfo_init_zero                   {"", "", "", "", "", "", 0}
#define BmsOTA_init_zero                         {"", "", "", "", "", "", 0}
#define LibsafeOTA_init_zero                     {"", "", "", "", "", "", 0}
#define TrackerOperation_init_zero               {0, 0}
#define BmsOperation_init_zero                   {0, 0}
#define BatInfo_init_zero                        {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}

/* Field tags (for use in manual encoding/decoding) */
#define BatInfo_cellVol_tag                      1
#define BatInfo_batteryTemp_tag                  2
#define BatteryFaultEvent_batteryErrorCode_tag   1
#define BatteryInfo_batteryVoltage_tag           1
#define BatteryInfo_batteryCurrent_tag           2
#define BatteryInfo_batterySoc_tag               3
#define BatteryInfo_batteryHardVersion_tag       4
#define BatteryInfo_batterySoftVersion_tag       5
#define BatteryInfo_batteryWorkMode_tag          6
#define BatteryInfo_batteryProtectCode_tag       7
#define BatteryInfo_batteryErrorCode_tag         8
#define BatteryInfo_batteryTemperatureMax_tag    9
#define BatteryInfo_batteryVoltageMax_tag        10
#define BatteryInfo_batteryVoltageMin_tag        11
#define BatteryInfo_mosStatus_tag                12
#define BatteryInfo_chargeCycleTime_tag          13
#define BatteryProtectEvent_batteryProtectCode_tag 1
#define BatterySafeEvent_batteryVoltage_tag      1
#define BatterySafeEvent_batteryCurrent_tag      2
#define BatterySafeEvent_batterySoc_tag          3
#define BatterySafeEvent_batteryAh_tag           4
#define BatterySafeEvent_cellV_tag               5
#define BatterySafeEvent_chargeState_tag         6
#define BatterySafeEvent_faultState3_tag         7
#define BatterySafeEvent_faultCellNumber3_tag    8
#define BatterySafeEvent_faultCellID3_tag        9
#define BatterySafeEvent_meanOCV_tag             10
#define BatterySafeEvent_oCVIntervalCNT_tag      11
#define BatterySafeEvent_faultState2_tag         12
#define BatterySafeEvent_faultCellNumber2_tag    13
#define BatterySafeEvent_faultCellID2_tag        14
#define BatterySafeEvent_faultState1_tag         15
#define BatterySafeEvent_faultCellNumber1_tag    16
#define BatterySafeEvent_faultCellID1_tag        17
#define BmsOTA_model_tag                         1
#define BmsOTA_manufacture_tag                   2
#define BmsOTA_hardwareVersion_tag               3
#define BmsOTA_softwareVersion_tag               4
#define BmsOTA_url_tag                           5
#define BmsOTA_md5_tag                           6
#define BmsOTA_size_tag                          7
#define BmsOperation_action_tag                  1
#define BmsOperation_value_tag                   2
#define FirmwareInfo_model_tag                   1
#define FirmwareInfo_manufacture_tag             2
#define FirmwareInfo_hardwareVersion_tag         3
#define FirmwareInfo_softwareVersion_tag         4
#define FirmwareInfo_url_tag                     5
#define FirmwareInfo_md5_tag                     6
#define FirmwareInfo_size_tag                    7
#define GpsLocationInfo_reportReason_tag         1
#define GpsLocationInfo_detStatus_tag            2
#define GpsLocationInfo_csq_tag                  3
#define GpsLocationInfo_networkType_tag          4
#define GpsLocationInfo_locationMode_tag         5
#define GpsLocationInfo_longitude_tag            6
#define GpsLocationInfo_longitudeDirection_tag   7
#define GpsLocationInfo_latitude_tag             8
#define GpsLocationInfo_latitudeDirection_tag    9
#define GpsLocationInfo_gpsSpeed_tag             10
#define GpsLocationInfo_gpsSignal_tag            11
#define GpsLocationInfo_satelliteNum_tag         12
#define GpsLocationInfo_accuracy_tag             13
#define Header_thingId_tag                       1
#define Header_timestamp_tag                     2
#define LibsafeOTA_model_tag                     1
#define LibsafeOTA_manufacture_tag               2
#define LibsafeOTA_hardwareVersion_tag           3
#define LibsafeOTA_softwareVersion_tag           4
#define LibsafeOTA_url_tag                       5
#define LibsafeOTA_md5_tag                       6
#define LibsafeOTA_size_tag                      7
#define OtaResponseData_result_tag               1
#define OtaResponseData_reason_tag               2
#define OtaResponseData_slaveThingIds_tag        3
#define TrackerBaseInfo_model_tag                1
#define TrackerBaseInfo_manufacture_tag          2
#define TrackerBaseInfo_imei_tag                 3
#define TrackerBaseInfo_imsi_tag                 4
#define TrackerBaseInfo_mobile_tag               5
#define TrackerBaseInfo_trackerHardwareVersion_tag 6
#define TrackerBaseInfo_trackerSoftwareVersion_tag 7
#define TrackerFaultEvent_logDetail_tag          1
#define TrackerOperation_turnOffBms_tag          1
#define TrackerOperation_turnOffTracker_tag      2
#define TrackerQuery_base_tag                    1
#define TrackerQuery_realtime_tag                2
#define TrackerQuery_log_tag                     3
#define TrackerQuery_config_tag                  4
#define TrackerQuery_bat_tag                     5
#define TrackerResetEvent_serviceId_tag          1
#define BatteryLowPowerEvent_batterySoc_tag      1
#define BatteryLowPowerEvent_gpsLocationInfo_tag 2
#define MeassageData_header_tag                  1
#define MeassageData_data_tag                    2
#define MeassageData_code_tag                    3
#define OtaAction_trackerOTA_tag                 1
#define OtaAction_bmsOTA_tag                     2
#define OtaAction_libsafeOTA_tag                 3
#define TrackerRealTimeInfo_batteryInfo_tag      1
#define TrackerRealTimeInfo_gpsLocationInfo_tag  2
#define EventRequestData_batteryLowPowerEvent_tag 1
#define EventRequestData_batteryFaultEvent_tag   2
#define EventRequestData_batteryProtectEvent_tag 3
#define EventRequestData_trackerFaultEvent_tag   4
#define EventRequestData_trackerResetEvent_tag   5
#define EventRequestData_batterySafeEvent_tag    6
#define EventRequestData_eventTime_tag           7

/* Struct field encoding specification for nanopb */
extern const pb_field_t MeassageData_fields[4];
extern const pb_field_t Header_fields[3];
extern const pb_field_t TrackerBaseInfo_fields[8];
extern const pb_field_t TrackerRealTimeInfo_fields[3];
extern const pb_field_t BatteryInfo_fields[14];
extern const pb_field_t GpsLocationInfo_fields[14];
extern const pb_field_t EventRequestData_fields[8];
extern const pb_field_t BatteryLowPowerEvent_fields[3];
extern const pb_field_t BatteryFaultEvent_fields[2];
extern const pb_field_t BatteryProtectEvent_fields[2];
extern const pb_field_t TrackerFaultEvent_fields[2];
extern const pb_field_t TrackerResetEvent_fields[2];
extern const pb_field_t BatterySafeEvent_fields[18];
extern const pb_field_t OtaResponseData_fields[4];
extern const pb_field_t TrackerQuery_fields[6];
extern const pb_field_t OtaAction_fields[4];
extern const pb_field_t FirmwareInfo_fields[8];
extern const pb_field_t BmsOTA_fields[8];
extern const pb_field_t LibsafeOTA_fields[8];
extern const pb_field_t TrackerOperation_fields[3];
extern const pb_field_t BmsOperation_fields[3];
extern const pb_field_t BatInfo_fields[3];

/* Maximum encoded size of messages (where known) */
#define MeassageData_size                        288
#define Header_size                              77
#define TrackerBaseInfo_size                     462
#define TrackerRealTimeInfo_size                 398
#define BatteryInfo_size                         253
#define GpsLocationInfo_size                     139
#define EventRequestData_size                    1501
#define BatteryLowPowerEvent_size                153
#define BatteryFaultEvent_size                   11
#define BatteryProtectEvent_size                 11
#define TrackerFaultEvent_size                   66
#define TrackerResetEvent_size                   11
#define BatterySafeEvent_size                    1224
#define OtaResponseData_size                     79
#define TrackerQuery_size                        10
#define OtaAction_size                           1230
#define FirmwareInfo_size                        407
#define BmsOTA_size                              407
#define LibsafeOTA_size                          407
#define TrackerOperation_size                    4
#define BmsOperation_size                        22
#define BatInfo_size                             528

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define LIBSAFETRACKERMESSAGE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
